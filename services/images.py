# services/images.py
import logging
from aiogram import Bot

from database.users import get_username, load_users
from database.filters import get_filters
from services.filters import is_post_allowed, get_rating_label
from services.cache import cache
from parsers.gelbooru import fetch_top  # ¬´—Ç–æ–ø¬ª, –¥–∞–ª—å—à–µ —Ä–µ–∂–µ–º –ø–µ—Ä–∏–æ–¥/—Ñ–∏–ª—å—Ç—Ä—ã

FURRY_TUESDAY_CAPTION = "" # –ü–æ–∫–∞ –Ω–∏–∫–∞–∫–æ–π 

async def send_media(bot: Bot, user_id: int, file_url: str, file_ext: str, caption: str):
    try:
        ext = file_ext.lower()
        if ext in ["jpg", "jpeg", "png", "webp"]:
            await bot.send_photo(user_id, file_url, caption=caption)
        elif ext in ["gif"]:
            await bot.send_animation(user_id, file_url, caption=caption)
        elif ext in ["webm", "mp4"]:
            await bot.send_video(user_id, file_url, caption=caption)
        else:
            logging.warning(f"Unsupported file type: {file_ext}")
            await bot.send_message(user_id, f"‚ö†Ô∏è –¢–∏–ø —Ñ–∞–π–ª–∞ {file_ext} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Telegram.")
    except Exception as e:
        logging.error(f"Send media failed ({file_ext}): {e}")
        await bot.send_message(user_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞.")

async def send_random_image(bot: Bot, user_id: int):
    filters = await get_filters(user_id)
    username = await get_username(user_id)

    for _ in range(10):
        post = await cache.get_post(user_filters=filters, random_order=True)
        if not post:
            await bot.send_message(user_id, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")
            return
        file_url = post["file"]["url"]
        file_ext = post["file"]["ext"]
        post_url = post.get("page_url", "")
        rating = get_rating_label(post.get("rating", ""))
        caption = f"{rating}\n{post_url}"
        await send_media(bot, user_id, file_url, file_ext, caption)
        logging.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç {post['id']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - @{username} (—Ä–µ–π—Ç–∏–Ω–≥: {rating})")
        return

    await bot.send_message(user_id, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")


async def send_image(bot: Bot, user_id: int, period: str = "week", caption: str = ""):
    filters = await get_filters(user_id)
    username = await get_username(user_id)

    # –ë–µ—Ä—ë–º –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –æ–±—â–∏–π –∫—ç—à (–æ–Ω —Å–∞–º –¥–æ–±–∞–≤–∏—Ç rating:safe –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–ª—é—á–µ–π)
    post = await cache.get_post(user_filters=filters, period=period, random_order=False)
    if not post:
        await bot.send_message(user_id, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")
        return
    file_url = post["file"]["url"]
    file_ext = post["file"]["ext"]
    post_url = post.get("page_url", "")
    rating = get_rating_label(post.get("rating", ""))

    full_caption = caption + f"{rating}\n{post_url}"
    await send_media(bot, user_id, file_url, file_ext, full_caption)
    logging.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç {post['id']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - @{username} (—Ä–µ–π—Ç–∏–Ω–≥: {rating})")
    if caption == FURRY_TUESDAY_CAPTION:
        await bot.send_message(user_id, "üòû –§—É—Ä—Ä–∏ –≤—Ç–æ—Ä–Ω–∏–∫ –æ—Ç–º–µ–Ω—ë–Ω ‚Äî —É –≤–∞—Å —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –∑–∞–ø—Ä–µ—â—ë–Ω NSFW.")
    else:
        await bot.send_message(user_id, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")

async def send_image_toeveryone(bot: Bot, period: str = "week"):
    users = await load_users()
    for user_id in users:
        try:
            await send_image(bot, user_id, period=period, caption=FURRY_TUESDAY_CAPTION)
        except Exception as e:
            logging.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")